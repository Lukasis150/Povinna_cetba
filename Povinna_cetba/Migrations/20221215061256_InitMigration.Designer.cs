// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Povinna_cetba.Data;

#nullable disable

namespace Povinna_cetba.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221215061256_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Povinna_cetba.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Povinna_cetba.Models.BookGenresLink", b =>
                {
                    b.Property<int>("BooklId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("BooklId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("BookGenresLinks");
                });

            modelBuilder.Entity("Povinna_cetba.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("Povinna_cetba.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActualBookId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActualBookId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Povinna_cetba.Models.StudentBooksLink", b =>
                {
                    b.Property<int>("StudentlId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("StudentlId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("StudentBooksLinks");
                });

            modelBuilder.Entity("Povinna_cetba.Models.BookGenresLink", b =>
                {
                    b.HasOne("Povinna_cetba.Models.Book", "Book")
                        .WithMany("GenreLinks")
                        .HasForeignKey("BooklId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Povinna_cetba.Models.Genre", "Genre")
                        .WithMany("BookLinks")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Povinna_cetba.Models.Student", b =>
                {
                    b.HasOne("Povinna_cetba.Models.Book", "ActualBook")
                        .WithMany()
                        .HasForeignKey("ActualBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActualBook");
                });

            modelBuilder.Entity("Povinna_cetba.Models.StudentBooksLink", b =>
                {
                    b.HasOne("Povinna_cetba.Models.Book", "Book")
                        .WithMany("StudentLinks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Povinna_cetba.Models.Student", "Student")
                        .WithMany("BookLinks")
                        .HasForeignKey("StudentlId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Povinna_cetba.Models.Book", b =>
                {
                    b.Navigation("GenreLinks");

                    b.Navigation("StudentLinks");
                });

            modelBuilder.Entity("Povinna_cetba.Models.Genre", b =>
                {
                    b.Navigation("BookLinks");
                });

            modelBuilder.Entity("Povinna_cetba.Models.Student", b =>
                {
                    b.Navigation("BookLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
